app.put('/update/:id', (req, res) => {
    const id = Number(req.params.id); // Get ID from URL
    const newData = req.body; // New data to update

    fs.readFile(filePath, (error, data) => {
        let contents = [];

        if (!error) {
            try {
                contents = JSON.parse(data);
            } catch (err) {
                console.log("Error parsing JSON");
                return res.status(500).send("Error reading data");
            }
        }

        let itemFound = false;
        contents = contents.map(item => {
            if (item.id === id) {
                itemFound = true;
                return { ...item, ...newData }; // Update the existing item
            }
            return item;
        });

        if (!itemFound) {
            return res.status(404).send("ID not found");
        }

        fs.writeFile(filePath, JSON.stringify(contents, null, 2), (error) => {
            if (error) {
                console.log("Error writing file");
                return res.status(500).send("Error updating data");
            }
            res.status(200).send("Data updated successfully!");
        });
    });
});














app.put('/update/:id', (req, res) => {
    const id = Number(req.params.id); // Convert ID from string to number
    const newData = req.body; // Get new data from request body

    fs.readFile(filePath, (error, data) => {
        if (error) {
            return res.status(500).send("Error reading file");
        }

        let contents = JSON.parse(data); // Convert JSON to array

        let itemFound = false;
        for (let i = 0; i < contents.length; i++) {
            if (contents[i].id === id) {
                contents[i] = { ...contents[i], ...newData }; // Update existing data
                itemFound = true;
                break; // Stop looping after finding the item
            }
        }

        if (!itemFound) {
            return res.status(404).send("ID not found");
        }

        fs.writeFile(filePath, JSON.stringify(contents, null, 2), (error) => {
            if (error) {
                return res.status(500).send("Error updating data");
            }
            res.send("Data updated successfully!");
        });
    });
});
